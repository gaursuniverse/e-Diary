{"version":3,"sources":["components/Login.js","components/notes/Nav.js","components/notes/Home.js","components/notes/CreateNote.js","components/notes/EditNote.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["Login","setIsLogin","useState","name","email","password","user","setUser","err","setErr","onChangeInput","e","target","value","registerSubmit","a","preventDefault","axios","post","username","res","data","msg","response","loginSubmit","localStorage","setItem","token","onLogin","setOnLogin","style","visibility","opacity","className","onSubmit","type","id","placeholder","required","onChange","autoComplete","onClick","Nav","to","clear","Home","notes","setNotes","setToken","getNotes","get","headers","Authorization","useEffect","getItem","deleteNote","delete","window","location","href","map","note","key","_id","title","content","format","date","CreateNote","setNote","history","useHistory","createNote","newNote","push","htmlFor","rows","EditNote","match","params","Date","toLocaleDateString","getNote","editNote","put","Notes","path","component","exact","App","isLogin","verified","console","log","checkLogin","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.179d60ab.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Login({setIsLogin}) {\r\n    const [user, setUser] = useState({name: '',email: '',password: '' })\r\n    const [err, setErr] = useState('')\r\n\r\n    const onChangeInput = e =>{\r\n        const {name, value} = e.target;\r\n        setUser({...user, [name]:value})\r\n        setErr('')\r\n    }\r\n\r\n    const registerSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/users/register',{\r\n                username: user.name,\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n            setUser({name: '', email: '', password: ''})\r\n            setErr(res.data.msg)\r\n        } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const loginSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/users/login',{\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n            setUser({name: '', email: '', password: ''})\r\n            localStorage.setItem('tokenStore', res.data.token)\r\n            setIsLogin(true)\r\n        } catch (err) {\r\n            err.response.data.msg && setErr(err.response.data.msg)\r\n        }\r\n    }\r\n\r\n    const [onLogin, setOnLogin] = useState(false)\r\n    const style = {\r\n        visibility: onLogin ? \"visible\" : \"hidden\",\r\n        opacity: onLogin ? 1 : 0\r\n    }\r\n\r\n    return (\r\n       <section className=\"login-page\">\r\n           <div className=\"login create-note\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={loginSubmit}>\r\n                    <input type=\"email\" name=\"email\" id=\"login-email\"\r\n                    placeholder=\"Email\" required value={user.email}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"password\" name=\"password\" id=\"login-password\"\r\n                    placeholder=\"Password\" required value={user.password}\r\n                    autoComplete=\"true\"\r\n                    onChange={onChangeInput} />\r\n\r\n                    <button type=\"submit\">Login</button>\r\n                    <p>You don't have an account?\r\n                        <span onClick={() => setOnLogin(true)}> Register Now</span>\r\n                    </p>\r\n                    <h3>{err}</h3>\r\n                </form>\r\n           </div>\r\n           <div className=\"register create-note\" style={style}>\r\n           <h2>Register</h2>\r\n                <form onSubmit={registerSubmit}>\r\n                    <input type=\"text\" name=\"name\" id=\"register-name\"\r\n                    placeholder=\"User Name\" required value={user.name}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"email\" name=\"email\" id=\"register-email\"\r\n                    placeholder=\"Email\" required value={user.email}\r\n                    onChange={onChangeInput} />\r\n\r\n                    <input type=\"password\" name=\"password\" id=\"register-password\"\r\n                    placeholder=\"Password\" required value={user.password}\r\n                    autoComplete=\"true\" onChange={onChangeInput} />\r\n\r\n                    <button type=\"submit\">Register</button>\r\n                    <p>You already have an account?\r\n                        <span onClick={() => setOnLogin(false)}> Login Now</span>\r\n                    </p>\r\n                    <h3>{err}</h3>\r\n                </form>\r\n           </div>\r\n       </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Nav({setIsLogin}) {\r\n\r\n    const logoutSubmit = () =>{\r\n        localStorage.clear()\r\n        setIsLogin(false)\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <h1><Link to=\"/\">Vishku Notes</Link></h1>\r\n            </div>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/create\">Create Note</Link></li>\r\n                <li onClick={logoutSubmit}><Link to=\"/\">Logout</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {format} from 'timeago.js'\r\nimport axios from 'axios'\r\n\r\nexport default function Home() {\r\n    const [notes, setNotes] = useState([])\r\n    const [token, setToken] = useState('')\r\n\r\n    const getNotes = async (token) =>{\r\n        const res = await axios.get('api/notes', {\r\n            headers:{Authorization: token}\r\n        })\r\n        setNotes(res.data)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const token = localStorage.getItem('tokenStore')\r\n        setToken(token)\r\n        if(token){\r\n            getNotes(token)\r\n        }\r\n    }, [])\r\n\r\n    const deleteNote = async (id) =>{\r\n        try {\r\n            if(token){\r\n                await axios.delete(`api/notes/${id}`, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                getNotes(token)\r\n            }\r\n        } catch (error) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"note-wrapper\">\r\n            {\r\n                notes.map(note =>(\r\n                    <div className=\"card\" key={note._id}>\r\n                        <h4 title={note.title}>{note.title}</h4>\r\n                        <div className=\"text-wrapper\">\r\n                            <p>{note.content}</p>\r\n                        </div>\r\n                        <p className=\"date\">{format(note.date)}</p>\r\n                        <div className=\"card-footer\">\r\n                            {note.name}\r\n                            <Link to={`edit/${note._id}`} >Edit</Link>\r\n                        </div>\r\n                        <button className=\"close\" \r\n                        onClick={() => deleteNote(note._id)} >X</button>\r\n                    </div>\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function CreateNote() {\r\n    const [note, setNote] = useState({\r\n        title: '',\r\n        content: '',\r\n        date: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setNote({...note, [name]:value})\r\n    }\r\n\r\n\r\n    const createNote = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(token){\r\n                const {title, content, date} = note;\r\n                const newNote = {\r\n                    title, content, date\r\n                }\r\n\r\n                await axios.post('/api/notes', newNote, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                \r\n                return history.push('/')\r\n            }\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-note\">\r\n            <h2>Create Note</h2>\r\n            <form onSubmit={createNote} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" value={note.title} id=\"title\"\r\n                    name=\"title\" required onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" value={note.content} id=\"content\"\r\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <label htmlFor=\"date\">Date: {note.date} </label>\r\n                <div className=\"row\">\r\n                    <input type=\"date\" id=\"date\"\r\n                    name=\"date\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function EditNote({match}) {\r\n    const [note, setNote] = useState({\r\n        title: '',\r\n        content: '',\r\n        date: '',\r\n        id: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        const getNote = async () =>{\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(match.params.id){\r\n                const res = await axios.get(`/api/notes/${match.params.id}`, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                setNote({\r\n                    title: res.data.title,\r\n                    content: res.data.content,\r\n                    date: new Date(res.data.date).toLocaleDateString(),\r\n                    id: res.data._id\r\n                })\r\n            }\r\n        }\r\n        getNote()\r\n    },[match.params.id])\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setNote({...note, [name]:value})\r\n    }\r\n\r\n\r\n    const editNote = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(token){\r\n                const {title, content, date, id} = note;\r\n                const newNote = {\r\n                    title, content, date\r\n                }\r\n\r\n                await axios.put(`/api/notes/${id}`, newNote, {\r\n                    headers: {Authorization: token}\r\n                })\r\n                \r\n                return history.push('/')\r\n            }\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"create-note\">\r\n            <h2>Edit Note</h2>\r\n            <form onSubmit={editNote} autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" value={note.title} id=\"title\"\r\n                    name=\"title\" required onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea type=\"text\" value={note.content} id=\"content\"\r\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <label htmlFor=\"date\">Date: {note.date} </label>\r\n                <div className=\"row\">\r\n                    <input type=\"date\" id=\"date\"\r\n                    name=\"date\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <button type=\"submit\">Save</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Header from './notes/Nav'\r\nimport Home from './notes/Home'\r\nimport CreateNote from './notes/CreateNote'\r\nimport EditNote from './notes/EditNote'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nexport default function Notes({setIsLogin}) {\r\n    return (\r\n        <Router>\r\n        <div className=\"notes-page\">\r\n            <Header setIsLogin={setIsLogin} />\r\n            <section>\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/create\" component={CreateNote} exact />\r\n                <Route path=\"/edit/:id\" component={EditNote} exact />\r\n            </section>\r\n            \r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Login from './components/Login'\r\nimport Notes from './components/Notes'\r\n\r\n\r\nfunction App() {\r\n  const [isLogin, setIsLogin] = useState(false)\r\n\r\n  useEffect(() =>{\r\n    const checkLogin = async () =>{\r\n      const token = localStorage.getItem('tokenStore')\r\n      if(token){\r\n        const verified = await axios.get('/users/verify',{\r\n          headers:{ Authorization: token}\r\n        })\r\n        console.log(verified)\r\n        setIsLogin(verified.data)\r\n        if(verified.data === false) return localStorage.clear()\r\n      }else{\r\n        setIsLogin(false)\r\n      }\r\n    }\r\n    checkLogin()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        isLogin \r\n        ? <Notes setIsLogin={setIsLogin} /> \r\n        : <Login setIsLogin={setIsLogin} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}